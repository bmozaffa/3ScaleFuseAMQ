import groovy.json.JsonOutput


node('maven') {

	def gitRepo = params.GIT_REPO
	def gitBranch = params.GIT_BRANCH != null && params.GIT_BRANCH != "" ? params.GIT_BRANCH : "master"

	def towerExtraVars = [
		git_repo: gitRepo,
		git_branch: gitBranch,
		//threescale_cicd_api_backend_hostname: params.OPENSHIFT_SERVICE_NAME + ":8080",
		threescale_cicd_api_backend_hostname: params.API_URL,
		threescale_cicd_openapi_smoketest_operation: params.ANSIBLE_SMOKE_TEST_OPREATION,
		threescale_cicd_api_backend_scheme: "http",
		threescale_cicd_api_base_system_name: params.ROUTE_SERVICE_NAME,
		threescale_cicd_validate_openapi: false,
		openapi_file: params.SWAGGER_FILE_NAME
	]



	stage('CreateRouteInside3scale') {

		catchError {

			sh "oc process -f "+params.API_CAST_ROUTE_TEMPLATE_FILE+" -p BASE_NAME="+params.ROUTE_SERVICE_NAME+" -p MAJOR_VERSION="+params.MAJOR_VERSION+" -p WILDCARD_DOMAIN="+params.WILDCARD_DOMAIN+" | oc create -f - -n "+params.THREESCALE_OPENSHIFT_PROJECT

		}

	}


	stage('Deploy API with Ansible to 3scale') {


		// Deploy the API to 3scale
		ansibleTower towerServer: params.ANSIBLE_TOWER_SERVER,
		inventory: params.ANSIBLE_TEST_INVENTORY,
		jobTemplate: params.ANSIBLE_JOB_TEMPLATE,
		extraVars: JsonOutput.toJson(towerExtraVars)

	}

}

